%implements s909_b0_zc1e_3_Enable "C"

%function Enable(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign tlcEnableFcnOfS68B3 = OpaqueTLCBlockFcn("Enable", 68, 3, 3, 2)
%assign tlcEnableFcnOfS68B4 = OpaqueTLCBlockFcn("Enable", 68, 4, 3, 2)
%if !WHITE_SPACE(tlcEnableFcnOfS68B3)
/* Enable for M-S-Function: '<S888>/S-Function' */
%<SLibCG_DumpSSCode("/*@[238c48*/",tlcEnableFcnOfS68B3,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcEnableFcnOfS68B4)
/* Enable for M-S-Function: '<S889>/Level-2 M-file S-Function' */
%<SLibCG_DumpSSCode("/*@[238c4a*/",tlcEnableFcnOfS68B4,"/*@]*/")>\
%endif
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[3].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Enable", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Enable"))
%<SLibCG_AccessArg(3, 2, 0)>
%endif
%if SLibCG_ArgAccessed(3, 2, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Enable", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Enable"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(3, 2, 0)>
%endif
%endfunction
%function EnableFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void CAN2Send_Enable(\
%assign comma = ""
%if SLibCG_ArgAccessed(3, 2, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%endif
%if SLibCG_ArgAccessed(3, 2, 1)
%<comma>rtB_CAN2Send *localB\
%assign comma = ", "
%endif
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(3, 2, fcnProtoType)>
%endfunction
